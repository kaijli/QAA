#!/bin/bash
#SBATCH --account=bgmp                  ### Account used for job submission
#SBATCH --partition=bgmp                ### Partition (like a queue in PBS)
#SBATCH --job-name=gcount                ### Job Name
#SBATCH --output=output/gcount_%j.out            ### File in which to store job output
#SBATCH --error=output/gcount_%j.err             ### File in which to store job error messages
#SBATCH --time=0-01:00:00               ### Wall clock time limit in Days-HH:MM:SS
#SBATCH --nodes=1                       ### Number of nodes needed for the job
#SBATCH --ntasks=1                      ### Number of tasks per array job
#SBATCH --ntasks-per-node=1             ### Number of tasks to be launched per Node
##SBATCH --array=0-3                    ### Array index
#SBATCH --mail-type=END                 ### Mail events (NONE, BEGIN, END, FA$
#SBATCH --mail-user=kli8@uoregon.edu    ### Where to send mail
#SBATCH --cpus-per-task=8               ### Number of CPU cores per task (edited) 

conda activate bgmp-qaa

rev=$(grep -v "^__" htseq_results/4_2C_mbnl_S4_L008_reverse.genecount | awk '{sum+=$2} END {print sum}')
str=$(grep -v "^__" htseq_results/4_2C_mbnl_S4_L008_stranded.genecount | awk '{sum+=$2} END {print sum}')

revtot=$(awk '{sum+=$2} END {print sum}' htseq_results/4_2C_mbnl_S4_L008_reverse.genecount)
strtot=$(awk '{sum+=$2} END {print sum}' htseq_results/4_2C_mbnl_S4_L008_stranded.genecount)

revper=$(python -c "print($rev/$revtot*100)")
strper=$(python -c "print($str/$strtot*100)")

echo -e "Results \nNumber of reads mapped" > genecount_results.txt
echo -e "reverse:\t$rev" >> genecount_results.txt
echo -e "stranded:\t$str\n" >> genecount_results.txt
echo -e "Total reads" >> genecount_results.txt
echo -e "reverse:\t$revtot" >> genecount_results.txt
echo -e "stranded:\t$strtot\n" >> genecount_results.txt
echo -e "Percent of reads mapped" >> genecount_results.txt
echo -e "reverse:\t$revper %" >> genecount_results.txt
echo -e "stranded:\t$strper %" >> genecount_results.txt
echo "done"

exit 